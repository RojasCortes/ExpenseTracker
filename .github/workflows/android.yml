name: Android Build with Java 21
on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Generate version
        id: version
        run: echo "version=$(date +'%Y%m%d_%H%M')-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: npm install

      - name: Create dist folder
        run: |
          mkdir -p dist
          echo "<html><body>Placeholder</body></html>" > dist/index.html

      - name: Sync with Capacitor
        run: npx cap sync android

      - name: Create local.properties
        run: echo "sdk.dir=$ANDROID_HOME" > android/local.properties

      - name: Build debug APK
        run: |
          cd android
          chmod +x ./gradlew
          ./gradlew assembleDebug --stacktrace

      - name: Find APK
        run: |
          echo "APK_PATH=$(find android -name "app-debug.apk" | head -n 1)" >> $GITHUB_ENV
          find android -name "*.apk"

      - name: Create versioned APK
        run: |
          mkdir -p versioned-apk
          cp ${{ env.APK_PATH }} versioned-apk/ExpenseTracker-${{ steps.version.outputs.version }}.apk
          echo "VERSIONED_APK_PATH=versioned-apk/ExpenseTracker-${{ steps.version.outputs.version }}.apk" >> $GITHUB_ENV
          echo "APK con versión creado en: ${{ env.VERSIONED_APK_PATH }}"
          ls -la versioned-apk/

      # Método alternativo usando GitHub CLI para subir el APK a una release
      - name: Install GitHub CLI
        run: |
          type -p curl >/dev/null || apt-get install curl -y
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt-get update
          sudo apt-get install gh -y

      - name: Create Release and Upload APK
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Crear el tag para la versión
          TAG="build-${{ steps.version.outputs.version }}"
          RELEASE_NAME="Build ${{ steps.version.outputs.version }}"
          
          # Crear la release con GitHub CLI
          gh release create $TAG ${{ env.VERSIONED_APK_PATH }} \
            --title "$RELEASE_NAME" \
            --notes "Automated build generated on $(date)" \
            --repo ${{ github.repository }}