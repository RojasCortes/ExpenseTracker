name: Android Build with Java 21

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Necesario para obtener todos los tags y commits para versionado

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Generate build version
        id: version
        run: |
          echo "version=$(date +'%Y%m%d_%H%M')-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "Build version: $(date +'%Y%m%d_%H%M')-$(git rev-parse --short HEAD)"

      - name: Install dependencies
        run: npm install

      - name: Create dist folder
        run: |
          mkdir -p dist
          echo "<html><body>Placeholder</body></html>" > dist/index.html

      - name: Sync with Capacitor
        run: npx cap sync android

      - name: Create local.properties
        run: echo "sdk.dir=$ANDROID_HOME" > android/local.properties

      - name: Update version in build.gradle
        run: |
          if [ -f android/app/build.gradle ]; then
            # Buscar y reemplazar versionName o a√±adirlo si no existe
            if grep -q "versionName" android/app/build.gradle; then
              sed -i "s/versionName \"[^\"]*\"/versionName \"${{ steps.version.outputs.version }}\"/g" android/app/build.gradle
            else
              sed -i "/defaultConfig {/a\\        versionName \"${{ steps.version.outputs.version }}\"" android/app/build.gradle
            fi
          
            echo "Updated version in build.gradle to ${{ steps.version.outputs.version }}"
            grep -A 10 "defaultConfig {" android/app/build.gradle
          fi

      - name: Build debug APK
        run: |
          cd android
          chmod +x ./gradlew
          ./gradlew assembleDebug --stacktrace

      - name: Check APK file exists
        run: find android -name "*.apk"

      - name: Upload APK with version
        uses: actions/upload-artifact@v2
        with:
          name: ExpenseTracker-${{ steps.version.outputs.version }}
          path: android/app/build/outputs/apk/debug/app-debug.apk

      - name: Rename APK file with version
        run: |
          mkdir -p versioned-apk
          cp android/app/build/outputs/apk/debug/app-debug.apk versioned-apk/ExpenseTracker-${{ steps.version.outputs.version }}.apk

      - name: Upload versioned APK
        uses: actions/upload-artifact@v2
        with:
          name: versioned-apk
          path: versioned-apk/ExpenseTracker-${{ steps.version.outputs.version }}.apk